@use 'sass:map';
@use 'variables' as *;

// media query
@mixin mq-min($breakpoint: 'md') {
  @media #{map.get($breakpoint-up, $breakpoint)} {
    @content;
  }
}

@mixin mq-max($breakpoint: 'md') {
  @media #{map.get($breakpoint-down, $breakpoint)} {
    @content;
  }
}

// clear fix
@mixin clearfix {
  zoom: 1;

  &::before,
  &::after {
    display: table;
    content: '';
  }

  &::after {
    clear: both;
  }
}

// font-size
@mixin font-size($size) {
  font-size: $size + px;
  font-size: calc($size / 16) + rem;
}

// Hover
@mixin hover {
  @media (hover: hover) and (pointer: fine) {
    @content;
  }
}

@mixin any-hover {
  @media (any-hover: hover) {
    @content;
  }
}

// Transition
@mixin transition($property: all, $duration: 0.2s, $timingFunction: ease-out, $delay: 0s) {
  transition-property: $property;
  transition-duration: $duration;
  transition-timing-function: $timingFunction;
  transition-delay: $delay;
}

// Size
$comp: 376; // 750??

@function vw($size) {
  @return math.div($size * 100, $comp) + vw;
}

@function vmin($size) {
  @return math.div($size * 100, $comp) + vmin;
}

@function rem($size) {
  @return math.div($size, 16) + rem;
}

// Ellipsis
@mixin ellipsis($line-clamp: 2) {
  display: -webkit-box;
  text-overflow: ellipsis;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $line-clamp;
  min-height: 0;
  overflow: hidden;
}

// 'line-height' Remove TOP and BOTTOM margins
@mixin line-height($line-height) {
  &::before,
  &::after {
    content: '';
    display: block;
    width: 0;
    height: 0;
  }

  &::before {
    margin-top: calc((1 - #{$line-height}) * 0.5em); //文字上の余白を消す
  }

  &::after {
    margin-bottom: calc((1 - #{$line-height}) * 0.5em); //文字下の余白を消す
  }
}
